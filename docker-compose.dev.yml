name: DevBox-v0
services:
  postgres:
    image: postgres:latest
    container_name: devbox-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - my_postgres_data:/var/lib/postgresql/data
    networks:
      - devbox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s
    
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: always
    env_file: ./server/.env.local
    environment:
      - NODE_ENV=development
    volumes:
      - "./server:/app"
      - /app/node_modules
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./server/.env.local:/app/.env
    networks:
      - devbox-network
    command: >
      sh -c "until npx prisma migrate dev --name init; do sleep 5; done && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy

  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    restart: always
    env_file: ./client/.env.local
    environment:
      - NODE_ENV=local
    volumes:
      - "./client:/app"
      - /app/node_modules
    networks:
      - devbox-network
    # command: npm run dev -- --host
    depends_on:
      - server

  worker:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: always
    env_file: ./server/.env.local
    volumes:
      - "./server:/app"
      - /app/node_modules
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - devbox-network
    depends_on:
      - postgres
      - server
    command: ["npm", "run", "start:cron"]
  
  
  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./caddy/Caddyfile.dev:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - devbox-network
    depends_on:
      - server
      - client


volumes:
  my_postgres_data:
  caddy_data:
  caddy_config:

networks:
  devbox-network:
    driver: bridge
